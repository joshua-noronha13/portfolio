{"version":3,"sources":["components/Logo/Logo.js","components/SideNav/Icon.js","components/SideNav/SideNav.js","components/BasicComponents/PrimaryButton.js","components/Landing/Landing.js","components/Navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["spring","type","damping","stiffness","Logo","useState","initialColors","colors","setColors","useEffect","setTimeout","shuffle","ul","id","drag","map","background","li","key","layoutTransition","style","Icon","props","iconType","url","href","target","rel","class","aria-hidden","padding","color","SideBar","PrimaryButton","text","Button","variant","className","Landing","initial","opacity","y","animate","transition","staggerChildren","mass","duration","Container","fluid","div","variants","yoyo","delay","span","MainNavbar","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","Divider","App","Row","Col","sm","md","lg","Card","Img","src","Body","Title","Text","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.645a6fd0.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { shuffle } from \"lodash\";\nimport \"./logo.css\"\n\nconst spring = {\n    type: \"spring\",\n    damping: 20,\n    stiffness: 300\n};\n\nexport const Logo = () => {\n    const [colors, setColors] = useState(initialColors);\n\n    useEffect(() => {\n        setTimeout(() => setColors(shuffle(colors)), 2000);\n    }, [colors]);\n\n    return (\n        <motion.ul id=\"logo\" drag>\n            {colors.map(background => (\n                <motion.li \n                    id=\"logo-item\"\n                    key={background}\n                    layoutTransition={spring}\n                    style={{ background }}\n                />\n            ))}\n        </motion.ul>\n    );\n};\nexport default Logo\nconst initialColors = [\"#FF008C\", \"#D309E1\", \"#9C1AFF\", \"#7700FF\"];\n","import React from \"react\";\n\nexport default function Icon(props) {\n    const iconType = props.iconType;\n    const url = props.url\n    return (\n        <div>\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <i class={`fa ${iconType}`} aria-hidden=\"true\" style={{ padding: \"10px\", color:\"rgb(33, 37, 41)\" }}/>\n            </a>\n        </div>\n    )\n}","import React from \"react\";\nimport Logo from \"../Logo/Logo\"\nimport Icon from \"./Icon\"\nimport \"./sidenav.css\"\nexport default function SideBar() {\n    return (\n        <>\n            <div id=\"sidenav\">\n                <Logo />\n                <div id=\"icon-container\">\n                <Icon\n                    url=\"https://www.linkedin.com/in/joshua-noronha/\"\n                    iconType=\"fa-linkedin\"\n                />\n                <Icon\n                    url=\"https://github.com/joshuanoronha/\"\n                    iconType=\"fa-envelope-o\"\n                />\n                <Icon\n                    url=\"https://github.com/joshuanoronha/\"\n                    iconType=\"fa-github\"\n                />\n                </div>\n            </div>\n        </>\n    )\n}","import React from \"react\";\nimport { Button } from \"react-bootstrap\"\nimport \"./basicComponents.css\"\nexport default function PrimaryButton(props) {\n    const text = props.text\n    return (\n        <Button variant=\"outline-primary\" className=\"button\">\n            {text}\n        </Button>\n    )\n\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\"\nimport { motion } from \"framer-motion\"\nimport PrimaryButton from \"../BasicComponents/PrimaryButton\"\nimport \"./landing.css\"\n\nfunction Landing() {\n    const variant = {\n        initial: {\n            opacity: 0,\n            y: -10\n        },\n        animate: {\n            opacity: 1,\n            y: 0,\n            transition: {\n                type: 'spring',\n                staggerChildren: 0.2,\n                mass: 0.1,\n                duration: 2\n            }\n        }\n    }\n    const titleVariant = {\n        animate: {\n            color: [\"rgb(0,0,0)\", \"rgb(0,0,255)\", \"rgb(0,255,0)\", \"rgb(255,0,0)\", \"rgb(0,0,0)\"],\n            transition: {\n                type: 'spring',\n                color: {\n                    yoyo: \"infinity\",\n                    duration: 10\n                },\n                delay: 0.9,\n            }\n        }\n    }\n    return (\n        <Container id=\"landing-container\" fluid=\"md\">\n            <motion.div variants={variant} initial=\"initial\" animate=\"animate\">\n                <motion.div id=\"preface\" variants={variant}>Hi, my name is</motion.div>\n                <motion.div id=\"title\" variants={titleVariant} initial=\"initial\" animate=\"animate\">Joshua Noronha.</motion.div>\n                <motion.div id=\"subtitle\" variants={variant}>I am a Full Stack Developer.</motion.div>\n                <motion.div id=\"title-text\" variants={variant}>\n                    I'm a software engineer specializing in making enterprise level websites and backends \n                        </motion.div>\n                <motion.span variants={variant}>\n                    <PrimaryButton text=\"See Projects!\" />\n                </motion.span>\n            </motion.div>\n        </Container>\n    )\n}\n\nexport default Landing;","import React from \"react\";\nimport { Navbar, NavDropdown, Nav, FormControl, Form, Button } from \"react-bootstrap\";\nimport { motion } from \"framer-motion\"\nimport Logo from \"../Logo/Logo\"\nimport \"./navbar.css\"\n\nexport default function MainNavbar() {\n    const variant = {\n        initial: {\n            opacity: 0,\n        },\n        animate: {\n            opacity: 1,\n            transition: {\n                type: 'spring',\n                staggerChildren: 0.2,\n                delay: 0.7\n            }\n        }\n    }\n    return (\n        <motion.span variants={variant} initial=\"initial\" animate=\"animate\">\n            <Navbar id=\"navbar\" expand=\"lg\">\n                <Navbar.Brand href=\"#home\" id=\"brand\"><Logo /></Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n                    <Nav>\n                        <Nav.Link href=\"#home\" id=\"home\">Home</Nav.Link>\n                        <Nav.Link href=\"#link\">About</Nav.Link>\n                        <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </motion.span>\n    )\n}","import React from \"react\";\nimport \"./App.css\";\nimport SideBar from \"./components/SideNav/SideNav\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Landing from \"./components/Landing/Landing\"\nimport MainNavbar from \"./components/Navbar/Navbar\"\nimport { Container, Card, Button, Row, Col } from \"react-bootstrap\"\n\nfunction App() {\n  return (\n    <div>\n      <MainNavbar />\n      <Landing />\n      <SideBar />\n      <Container>\n        <Row>\n          <Col sm=\"12\" md=\"6\" lg=\"4\">\n            <Card>\n              <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n              <Card.Body>\n                <Card.Title>Card Title</Card.Title>\n                <Card.Text>\n                  Some quick example text to build on the card title and make up the bulk of\n                  the card's content.\n      </Card.Text>\n                <Button variant=\"primary\">Go somewhere</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col sm=\"12\" md=\"6\" lg=\"4\">\n            <Card>\n              <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n              <Card.Body>\n                <Card.Title>Card Title</Card.Title>\n                <Card.Text>\n                  Some quick example text to build on the card title and make up the bulk of\n                  the card's content.\n      </Card.Text>\n                <Button variant=\"primary\">Go somewhere</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col sm=\"12\" md=\"6\" lg=\"4\">\n            <Card>\n              <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n              <Card.Body>\n                <Card.Title>Card Title</Card.Title>\n                <Card.Text>\n                  Some quick example text to build on the card title and make up the bulk of\n                  the card's content.\n      </Card.Text>\n                <Button variant=\"primary\">Go somewhere</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n\n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}